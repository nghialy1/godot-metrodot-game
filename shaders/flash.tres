[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://cnay8p26e0eqq"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_2ruvy"]
parameter_name = "ColorParameter"
default_value_enabled = true

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_552ja"]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_3v061"]
source = 5

[sub_resource type="VisualShaderNodeMix" id="VisualShaderNodeMix_prxk0"]
default_input_values = [0, Quaternion(0, 0, 0, 0), 1, Quaternion(1, 1, 1, 1), 2, Quaternion(0.5, 0.5, 0.5, 0.5)]
op_type = 5

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_e0wv4"]
parameter_name = "Progress"
hint = 1

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 ColorParameter : source_color = vec4(1.000000, 1.000000, 1.000000, 1.000000);
uniform float Progress : hint_range(0, 1);



void fragment() {
	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(TEXTURE, UV);


// ColorParameter:2
	vec4 n_out2p0 = ColorParameter;


// FloatParameter:6
	float n_out6p0 = Progress;


// Mix:5
	vec4 n_out5p0 = mix(n_out4p0, n_out2p0, vec4(n_out6p0));


// Output:0
	COLOR.rgb = vec3(n_out5p0.xyz);


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(820, 20)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_2ruvy")
nodes/fragment/2/position = Vector2(120, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_552ja")
nodes/fragment/3/position = Vector2(-140, 0)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_3v061")
nodes/fragment/4/position = Vector2(280, -120)
nodes/fragment/5/node = SubResource("VisualShaderNodeMix_prxk0")
nodes/fragment/5/position = Vector2(560, 40)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_e0wv4")
nodes/fragment/6/position = Vector2(140, 380)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 4, 0, 5, 0, 2, 0, 5, 1, 5, 0, 0, 0, 6, 0, 5, 2)
